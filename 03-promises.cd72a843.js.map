{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAW,CACfC,KAAMC,SAASC,cAAc,UAiC/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACHC,KAAKC,SAAW,GAEnCH,EAAI,uBAAwCI,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAEjDG,EAAE,sBAAqCG,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IApCnDN,EAASC,KAAKY,iBAAiB,UAE/B,SAAkBC,GAChBA,EAAMC,iBACN,IAAMT,EAAQU,OAAOhB,EAASC,KAAKgB,SAASX,MAAMY,OAC5CC,EAAOH,OAAOhB,EAASC,KAAKgB,SAASE,KAAKD,OAC1CE,EAASJ,OAAOhB,EAASC,KAAKgB,SAASG,OAAOF,OAC9CG,EAAW,GACbD,GAAU,GACZE,EAAAxB,GAASyB,OAAOC,QAAQ,8BACxBH,EAAW,IAEXA,EAASI,KAAKrB,EAAc,EAAGE,IAEjC,IAAK,IAAIoB,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BL,EAASI,KAAKrB,EAAcsB,EAAI,EAAGA,EAAIP,EAAOb,IAEhDC,QAAQoB,WAAWN,GAAUO,MAAK,SAACC,GACjCA,EAAMC,SAAQ,SAACC,EAAMC,GACnBC,YAAW,WACU,cAAhBF,EAAKG,OACNZ,EAAAxB,GAASyB,OAAOY,QAAQJ,EAAKb,OAE7BI,EAAAxB,GAASyB,OAAOC,QAAQO,EAAKK,O,GAE9BJ,EAAIb,EAAOb,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst elements = {\n  form: document.querySelector('.form'),\n}\n\nelements.form.addEventListener('submit', onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = Number(elements.form.elements.delay.value);\n  const step = Number(elements.form.elements.step.value);\n  const amount = Number(elements.form.elements.amount.value);\n  const promises = [];\n  if (amount <= 0) {\n    Notiflix.Notify.failure(\"Amount must be more than 0\");\n    promises = [];\n  } else {\n    promises.push(createPromise(1, delay))\n  }\n  for (let i = 1; i < amount; i += 1){\n    promises.push(createPromise(i + 1, i * step + delay))\n  }\n  Promise.allSettled(promises).then((items) => {\n    items.forEach((item, i) => {\n      setTimeout(() => {\n        if(item.status === \"fulfilled\"){\n          Notiflix.Notify.success(item.value)\n        } else{\n          Notiflix.Notify.failure(item.reason);\n        }\n      }, i * step + delay); \n    });\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n     res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    rej(`❌ Rejected promise ${position} in ${delay}ms`);\n  }})\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$elements","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","Math","random","concat","addEventListener","event","preventDefault","Number","elements","value","step","amount","promises","$parcel$interopDefault","Notify","failure","push","i1","allSettled","then","items","forEach","item","i","setTimeout","status","success","reason"],"version":3,"file":"03-promises.cd72a843.js.map"}